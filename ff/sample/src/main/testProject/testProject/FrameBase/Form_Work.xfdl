<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_Work" width="1280" height="720" titletext="Form_Work">
    <Layouts>
      <Layout width="1280" height="720" screenid="Desktop_screen">
        <Button id="Button00" taborder="0" text="버튼" left="40" top="34" width="250" height="72" onclick="Button00_onclick"/>
        <Grid id="Grid00" taborder="1" left="46" top="123" width="532" height="306" binddataset="Ds" autofittype="col">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row band="head" size="24"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="SABUN"/>
                <Cell col="1" text="NAME"/>
                <Cell col="2" text="BIRTH"/>
              </Band>
              <Band id="body">
                <Cell text="bind:SABUN"/>
                <Cell col="1" text="bind:NAME"/>
                <Cell col="2" text="bind:BIRTH"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[
this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	getJsonToDataset(this.transaction("select", "svc::test", "", "Ds=test", "", "fn_callbakc", true, 3, false), Ds, 3);
}

this.fn_callback = function(svcId, eCode, eMsg)
{
	if(eCode != 0) this.alert(eMsg);
	else this.alert("성공");
	
	this.alert("뭐냐");
}


this.Button01_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var strJson;
	this.objJSON.data = this.getDatasetToJson(this.Dataset00, this.rdoType.value);
	
	strJson = JSON.stringify(this.objJSON, null, "\t");
	this.TextArea00.set_value(strJson);
};

this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.objJSON = JSON.parse(this.TextArea00.value);
	
	this.getJsonToDataset(this.objJSON.data, this.Dataset00, this.rdoType.value);
	
	this.Grid00.createFormat();
};

this.getDatasetToJson = function(ds, type)
{
	var i, j;
	var colcount;
	var rowcount;
	
	var temp = [];
	colcount = ds.colcount;
	rowcount = ds.rowcount;
	
	if(type == 0) 
	{
		for(i=0; i<rowcount; i++) {
			temp[i] = []; 
			for(j=0; j<colcount; j++) {
				temp[i][j] = ds.getColumn(i, j);
			}
		}
	}
	else if(type == 1) 
	{
		temp[0] = [];
		for(j=0; j<colcount; j++) {
			temp[0][j] = ds.getColID(j);
		}
		
		for(i=0; i<rowcount; i++) {
			temp[i+1] = [];
			for(j=0; j<colcount; j++) {
				temp[i+1][j] = ds.getColumn(i, j);
			}
		}
	}
	else if(type == 2) 
	{
		temp = [];
		for(i=0; i<rowcount; i++) {
			temp[i] = {};
			for(j=0; j<colcount; j++) {
				temp[i][ds.getColID(j)] = ds.getColumn(i, j);
			} 
		}
	}
	
	return temp;
};

this.getJsonToDataset = function(json, ds, type)
{
	var i, j;
	var row, col;
	var rowcount;
	var colcount;
	
	ds.clear();
	ds.set_enableevent(false);
	if(type == 0){
		i=0;
		for(col in json){
			ds.addColumn("col" + i, "string");
			i++;
		}
		
		for(row in json){
			i = 0;
			nRow = ds.addRow();
			for(col in json[row]){
				ds.setColumn(nRow, i, json[row][col]);
				i++;
			}
		}
	}
	else if(type == 1){
		rowcount = json.length;
		colcount = json[0].length;
		
		for(i=0; i<colcount; i++) {
			ds.addColumn(json[0][i], "string");
		}
		
		for(i=1; i<rowcount; i++) {
			nRow = ds.addRow();
			trace(json[i][0])
			for(j=0; j<colcount; j++) {
				ds.setColumn(nRow, json[0][j], json[i][j]);
			}
		}
	}
	else if(type == 2){
		for(col in json[0]){
			ds.addColumn(col, "string");
		}
		
		for(row in json){
			i = 0;
			nRow = ds.addRow();
			for(col in json[row]){
				ds.setColumn(nRow, i, json[row][col]);
				i++;
			}
		}
	}
	ds.set_enableevent(true);
}]]></Script>
    <Objects>
      <Dataset id="Ds">
        <ColumnInfo>
          <Column id="SABUN" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="BIRTH" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
